{"version":3,"sources":["services/telephone.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","NotificationError","Filter","name","handle","value","onChange","PersonForm","onSubmit","namevalue","nameonChange","telvalue","telonChange","type","Persons","persons","nameFilter","handleRemove","map","person","toLowerCase","includes","number","onClick","console","log","App","useState","setPersons","newName","setNewName","newTelephone","setNewTelephone","setNewFilter","notificationMessage","setMessage","notificationError","setError","useEffect","telephoneService","returnedTelephone","length","event","target","preventDefault","nameObject","slice","personToUpdate","find","p","changedPersonToUpdate","window","confirm","setTimeout","catch","error","filter","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e86e814.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {  \r\n  getAll,\r\n  create, \r\n  update,\r\n  remove \r\n}","import React, { useState, useEffect } from 'react'\r\nimport telephoneService from './services/telephone.js'\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst NotificationError = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Filter = ({name, handle}) =>{\r\n  return(\r\n  <form>\r\n  filter shown with : <input value={name} onChange={handle}/>  \r\n  </form>)\r\n}\r\n\r\nconst PersonForm = ({onSubmit,namevalue,nameonChange, telvalue, telonChange}) => {\r\n  return(\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={namevalue} onChange={nameonChange}/>\r\n      </div>\r\n      <div>\r\n        telephone: <input value={telvalue} onChange={telonChange}/>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst Persons = ({persons,nameFilter,handleRemove}) => {\r\n  return(\r\n  persons.map(person=>{\r\n    if(person.name.toLowerCase().includes(nameFilter.toLowerCase())===true){\r\n    return <div key={person.id}>{person.name} {person.number} <button onClick={() => handleRemove(person)}>delete</button></div>\r\n    }\r\n    else{\r\n      return console.log('No match')\r\n      }}\r\n    )\r\n  )  \r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newTelephone, setNewTelephone ] = useState('')\r\n  const [ nameFilter, setNewFilter ] = useState('')\r\n  const [ notificationMessage, setMessage] = useState(null)\r\n  const [ notificationError, setError] = useState(null)\r\n  \r\n  useEffect( () => {\r\n    telephoneService\r\n      .getAll()\r\n      .then(returnedTelephone => {\r\n        console.log('show all telephones')\r\n        setPersons(returnedTelephone)\r\n      })\r\n      \r\n  }, [])\r\n  \r\n  console.log('render', persons.length, 'persons')\r\n  \r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const nameObject={\r\n      name: newName,\r\n      number: newTelephone,\r\n      id: persons.slice(-1).id + 1\r\n    }\r\n    if (persons.map(person=>person.name).includes(nameObject.name) === true){\r\n      \r\n      const personToUpdate = persons.find(p => p.name === nameObject.name)\r\n      const changedPersonToUpdate = { ...personToUpdate, number: nameObject.number}\r\n      \r\n      if (window.confirm(`${nameObject.name} is already in the database, do you want to\r\n      update the number?`)){\r\n        telephoneService\r\n          .update(personToUpdate.id, changedPersonToUpdate)\r\n          .then(returnedTelephone => {       \r\n            setPersons(persons.map(person => person.id !== personToUpdate.id ? person : returnedTelephone))\r\n            setMessage('telephone updated')\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 3000)\r\n            }\r\n          )\r\n          .catch(error => {\r\n            setError(\r\n              `Telephone of '${personToUpdate.name}' was already removed from server`\r\n            )\r\n            setTimeout(() => {\r\n              setError(null)\r\n            }, 5000)\r\n            setPersons(persons.filter(p => p.id !== personToUpdate.id))\r\n          }) \r\n      }\r\n    }\r\n    else{\r\n      telephoneService\r\n        .create(nameObject)\r\n        .then(returnedTelephone => {\r\n          setPersons(persons.concat(returnedTelephone))\r\n          setNewName('')\r\n          setNewTelephone('')\r\n          setMessage('telephone added')\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 3000)\r\n        })   \r\n      console.log(\"success adding\")\r\n    }\r\n    console.log('add button clicked', event.target)\r\n  }\r\n  \r\n  const handleSearchChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleTelephoneChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewTelephone(event.target.value)\r\n  }\r\n\r\n  const handleRemove = (personToRemove) =>{\r\n    if (window.confirm(`Do you want to remove ${personToRemove.name}?`)){\r\n      telephoneService\r\n      .remove(personToRemove.id)\r\n      .then(        \r\n        setPersons(persons.filter(person => person.id !== personToRemove.id))\r\n      )     \r\n    } \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage}/>\r\n      <NotificationError message={notificationError}/>\r\n      <Filter name={nameFilter} handle={handleSearchChange} />\r\n      <h2>add a new</h2>\r\n      <PersonForm onSubmit={addName} namevalue={newName} nameonChange={handleNameChange} \r\n      telvalue={newTelephone} telonChange={handleTelephoneChange}/>\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} nameFilter={nameFilter} handleRemove = {handleRemove} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n\r\n"],"sourceRoot":""}